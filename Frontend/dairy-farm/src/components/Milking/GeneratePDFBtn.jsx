import React from 'react';
import axios from 'axios';
import { Box, Button } from '@mui/material';
import { useNavigate } from 'react-router-dom';
import companyLogo from '../../assets/sidebar-logo.png';
import jspdf from 'jspdf';
import 'jspdf-autotable';

function GeneratePDFBtn({ selectedOption }) {
    const navigate = useNavigate();

    const handleClick = async () => {
        try {
            const response = await axios.get(`http://localhost:3000/api/milkingData/${selectedOption}`);
            const milkingData = response.data.data;
            generatePDF(milkingData);
        } catch (error) {
            console.error('Error fetching milking data:', error);
        }
    };

    const generatePDF = (data) => {
        const doc = new jspdf();
        const tableRows = data.map((entry, index) => [
            entry.milkBatchId,
            formattedDate(entry.createdAt),
            entry.amountOfMilk,
            entry.duration,
            entry.qualityCheckResult,
            entry.issues ? entry.issues : 'No issues recorded'
        ]);

        const margin = 14; 
        const logoWidth = 30; 
        const logoHeight = 20; 
        const maxWidth = 290; 
        const textLines = doc.splitTextToSize(
            `This report contains milking data for the selected time period. It includes details such as milk batch ID, date, amount of milk, duration, quality check result, and any recorded issues.`,
            maxWidth
        );
        const textParagraph = textLines.join('\n');
       
        doc.addImage(companyLogo, 'PNG', doc.internal.pageSize.width - margin - logoWidth, margin, logoWidth, logoHeight);
    
       
        doc.setFontSize(10).setFont('helvetica').text('Nevil Nutri Feeds Pvt.Ltd', margin, margin + 10);
        doc.text('No:241, Radawana', margin, margin + 15);
        doc.text('Henagama Rd', margin, margin + 20);
        doc.text('Gampaha, Sri Lanka', margin, margin + 25);
        doc.text(formattedDate(new Date()), margin, margin + 30);
    
       
        doc.setFontSize(20).setTextColor(56, 119, 91).setFont('helvetica', 'bold').text('Milking Report', margin, 70);
    
       
        doc.setFontSize(10).setFont('helvetica', 'normal').setTextColor(0, 0, 0).text(
            textParagraph,
            margin,
            80,
            { maxWidth: maxWidth } 
        );
    
     
        doc.autoTable(['Milk Batch ID', 'Date', 'Amount of Milk', 'Duration', 'Quality Check Result', 'Issues'], tableRows, {
            startY: 100,
            headerStyles: { fillColor: [31, 41, 55] },
        });
    
     
        doc.setFontSize(10).setTextColor(200, 200, 200).text(`Report generated by Milking Management System`, margin, doc.internal.pageSize.height - 10);
    
      
        doc.save(`MilkingReport_${selectedOption}.pdf`);
    };

    const formattedDate = (dateString) => {
        const date = new Date(dateString);
        const year = date.getFullYear();
        let month = (1 + date.getMonth()).toString();
        month = month.length > 1 ? month : '0' + month; // Add leading zero if needed
        let day = date.getDate().toString();
        day = day.length > 1 ? day : '0' + day; // Add leading zero if needed
        return `${year}-${month}-${day}`;
    };

    return(
        <Box>
            <Button
                style={{
                    backgroundColor: '#38775B',
                    color: '#fff',
                    width: '100%',
                    fontFamily: 'Poppins, sans-serif',
                    textTransform: 'none',
                    fontWeight: '600',
                    fontSize: '18px',
                    borderRadius: '15px',
                    marginTop: '20px'
                }}
                onClick={handleClick}
            >
                Generate PDF
            </Button>
        </Box>
    );
}

export default GeneratePDFBtn;
