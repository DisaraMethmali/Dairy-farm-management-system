import React, { useState, useEffect } from 'react';
import axios from 'axios';
import jsPDF from 'jspdf';
import { Button, Select} from '@mui/material';
import companyLogo from '../../../assets/sidebar-logo.png';


function InventoryReport() {
  const [productBatches, setProductBatches] = useState([]);

  useEffect(() => {
    fetchData();
  }, []);

  const fetchData = async () => {
    try {
      const response = await axios.get('http://localhost:3000/api/productBatchCrud/productBatch');
      setProductBatches(response.data);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const downloadPDF = () => {
    const doc = new jsPDF();
  
    const date = new Date().toLocaleDateString('en-US', {
      day: 'numeric',
      month: 'short',
      year: 'numeric',
    });
  
    const margin = 14; 
    const logoWidth = 30; 
    const logoHeight = 20; 
    const maxWidth = 290; 
    const textLines = doc.splitTextToSize(
      `This report contains all product batches up to current date`,
      maxWidth
    );
    const textParagraph = textLines.join('\n');
   
    doc.addImage(companyLogo, 'PNG', doc.internal.pageSize.width - margin - logoWidth, margin, logoWidth, logoHeight);
  
    doc.setFontSize(10).setFont('helvetica').text('Nevil Nutri Feeds Pvt.Ltd', margin, margin + 10);
    doc.text('No:241, Rdawana', margin, margin + 15);
    doc.text('Henagama Rd', margin, margin + 20);
    doc.text('Gampaha', margin, margin + 25);
    doc.text('Sri Lanka', margin, margin + 30);
  
    doc.setFontSize(10).text(`Date: ${date}`, margin, margin + 35);
  
    doc.setFontSize(20).setTextColor(56, 119, 91).setFont('helvetica', 'bold').text('Product Batch Report', margin, 70);
  
    doc.setFontSize(10).setFont('helvetica', 'normal').setTextColor(0, 0, 0).text(
      textParagraph,
      margin,
      80,
      { maxWidth: maxWidth } 
    );
  
    // Generate the product batch table
    doc.autoTable({
      head: [['ID', 'Product', 'Variant', 'Quantity', 'Manufacture Date', 'Manufacture Time', 'Batch ID', 'Status']],
      body: productBatches.map(batch => [
        batch.productId,
        batch.name,
        batch.variant,
        batch.quantity,
        batch.manufactureDate ? new Date(batch.manufactureDate).toLocaleDateString() : 'N/A',
        batch.manufactureTime,
        batch.batchId,
        batch.released
      ]),
      startY: 100, // Adjust the starting position as needed
      styles: { fontSize: 10 },
      headerStyles: { fillColor: [31, 41, 55] },
    });
  
    // Add footer text
    doc.setFontSize(10).setTextColor(50, 40, 40).text(`Report generated by Production Management System`, margin, doc.internal.pageSize.height - 10);
  
    doc.save('Product Batch Report.pdf');
  };
  

  return (
    <div>
      <Button variant="contained" onClick={downloadPDF} style={{ backgroundColor: 'green', color: 'white' }}>Download PDF</Button>
    </div>
  );
}

export default InventoryReport;
