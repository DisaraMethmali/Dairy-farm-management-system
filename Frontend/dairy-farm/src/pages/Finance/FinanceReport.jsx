import React, { useState, useEffect } from 'react';
import Financesidebar from "../../components/Finance/Financesidebar"
import axios from 'axios';
import { useLocation } from 'react-router-dom';
import jspdf from 'jspdf';
import 'jspdf-autotable';
import companyLogo from '../../assets/sidebar-logo.png';
import { IconButton, CircularProgress, Box, Typography } from '@mui/material';
import DownloadIcon from '@mui/icons-material/Download';
import ReportDash from '../../components/Finance/Reports/ReportDash'

const Report = () => {
  const location = useLocation();
  const path = location.pathname.split('/')[1];
  const [transactionDataList, setTransactionDataList] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    fetchTransactionData();
  }, []);

  const fetchTransactionData = async () => {
    try {
      const response = await axios.get(`http://localhost:3000/api/transaction`);
      setTransactionDataList(response.data);
    } catch (error) {
      console.error('Error fetching transaction data:', error);
      alert('Error fetching transaction data. Please try again later.');
    }
  };

  function generateTransactionPDF(data) {
    setIsLoading(true);
    const doc = new jspdf();
    const tableRows = [];
    const headers = ['Date', 'Type', 'Description', 'Department', 'Value'];

    function formatDate(dateString) {
    const date = new Date(dateString);
    const year = date.getFullYear();
    let month = (1 + date.getMonth()).toString().padStart(2, '0'); // Month starts from 0
    let day = date.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
}

// Example usage:
const formattedDate = formatDate('2024-04-13T17:25:02.352Z');
console.log(formattedDate); // Output: 2024-04-13

    data.sort((a, b) => new Date(b.date) - new Date(a.date));

    data.forEach((item, index) => {
      const rowData = [formatDate(item.date), item.type, item.description, item.department, item.value];
      tableRows.push(rowData);
    });

    const date = new Date().toLocaleDateString('en-US', {
      day: 'numeric',
      month: 'short',
      year: 'numeric',
    });

    const margin = 14;
    const logoWidth = 30;
    const logoHeight = 20;
    const maxWidth = 290;
    const textLines = doc.splitTextToSize(`The transaction records report encapsulates vital financial data crucial for financial management. Through accurate documentation and systematic organization, this report serves as a pivotal tool for efficient oversight and administration of transactions, empowering informed decision-making processes and amplifying overall financial stability and productivity.`, maxWidth);
    const textParagraph = textLines.join('\n');

    doc.addImage(
      companyLogo,
      'PNG',
      doc.internal.pageSize.width - margin - logoWidth,
      margin,
      logoWidth,
      logoHeight
    );

        doc.setFontSize(10).setFont('helvetica').text('Nevil Nutri Feeds Pvt.Ltd', margin, margin + 10);
        doc.text('No:241, Radawana', margin, margin + 15);
        doc.text('Henagama Rd', margin, margin + 20);
        doc.text('Gampaha, Sri Lanka', margin, margin + 25);
    // Add your company address and other details as needed

    doc.setFontSize(10).text(`Date: ${date}`, margin, margin + 35);

    doc.setFontSize(20).setTextColor(56, 119, 91).setFont('helvetica', 'bold').text('Financial Transactions Report', margin, 70);

    doc.setFontSize(10).setFont('helvetica', 'normal').setTextColor(0, 0, 0).text(
      textParagraph,
      margin,
      80,
      { maxWidth: maxWidth }
    );

    doc.autoTable(headers, tableRows, {
      styles: { fontSize: 10 },
      startY: 100,
      headerStyles: { fillColor: [31, 41, 55] },
    });

    doc.setFontSize(10).setTextColor(200, 200, 200).text(`Report generated by Finance Management Subsystem `, margin, doc.internal.pageSize.height - 10);

    doc.save(`${path}-Transaction-Details-Report.pdf`);
    setIsLoading(false);
    
  }

  return (
    <div>
      <Financesidebar sx={{ position: 'fixed', left: 0, top: 0, height: '100vh' }} />
      <ReportDash />
       <Typography variant="h4" gutterBottom style={{ textAlign: 'center' , fontWeight: 'bold' }}>
        Finance Reports and Insights
      </Typography>
      <Box className="dashboard-content">
      </Box>
      <div style={{ marginTop:'70px',display: 'flex', justifyContent: 'center', gap:'70px',alignItems: 'center', flexDirection: 'column' }}>
        <div>
          <IconButton
            onClick={() => generateTransactionPDF(transactionDataList)}
            variant="contained"
            className="bg-gray-800 text-center hover:bg-gray-600 text-white font-bold py-2 px-4 rounded cursor-pointer"
             style={{
        backgroundColor: '#38775B', // Green background color
        color: '#FFFFFF', // White text color
        fontFamily: 'Poppins, sans-serif',
        textTransform: 'none',
        fontWeight: '600',
        fontSize: '18px',
        borderRadius: '15px',
        padding: '10px 20px' // Adjust padding as needed
    }}
          >
            {isLoading ? <CircularProgress size={24} /> : <DownloadIcon />}
            Transaction Detail Report
          </IconButton>
        </div>
        {isLoading && <CircularProgress />}
      </div>
    </div>
  );
};

export default Report;
