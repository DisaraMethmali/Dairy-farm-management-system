import React, { useState, useEffect } from 'react';
import jspdf from 'jspdf';
import 'jspdf-autotable';
import companyLogo from '../../assets/sidebar-logo.png';
import DownloadIcon from '@mui/icons-material/Download';
import IconButton from '@mui/material/IconButton';
import axios from 'axios';


const OrderReport = () => {

    const [dataList, setDataList] = useState([]);
    const [loading, setLoading] = useState(true);
  
    const headers = [
      'No',
      'Name',
      'Email',
      'Item Type',
      'Supplier Type',
      'Average Delivery Time',
    ];
  
    const fetchSuppliers = async () => {

        try{
            const response = await axios.get(`http://localhost:3000/api/supplier/`);
            setDataList(response.data);
            console.log(dataList);

            if (response.data.success) {
              setDataList(response.data.data);
            }
        } catch (error) {
            console.error('Error fetching data:', error);
            alert('Error fetching data. Please try again later.');
        }
    };
  
    useEffect(() => {
      fetchSuppliers();
    }, []);
  
    function generatePDF(suppliers) {
      const doc = new jspdf();
      const tableRows = [];
  
      suppliers.forEach((supplier, index) => {
        const supplierData = [
          index + 1,
          supplier.name,
          supplier.email,
          supplier.itemType,
          supplier.supplierType,
          supplier.avgDeliveryTime,
        ];
        tableRows.push(supplierData);
      });

        const date = new Date().toLocaleDateString('en-US', {
            day: 'numeric',
            month: 'short',
            year: 'numeric',
        });

        const margin = 14; 
        const logoWidth = 30; 
        const logoHeight = 20; 
        const maxWidth = 290; 
        const textLines = doc.splitTextToSize(
        `This report provides a comprehensive overview of the quantity of items ordered from each supplier. It is an essential tool for effective inventory management and procurement planning. By meticulously documenting and organizing this data, we can ensure optimal supply chain operations, facilitate informed decision-making processes, and promote the overall efficiency and productivity of the business.`,
        maxWidth
        );
        const textParagraph = textLines.join('\n');
     
        doc.addImage(companyLogo, 'PNG', doc.internal.pageSize.width - margin - logoWidth, margin, logoWidth, logoHeight);

     
        doc.setFontSize(10).setFont('helvetica').text('Nevil Nutri Feeds Pvt.Ltd', margin, margin + 10);
        doc.text('No:241, Rdawana', margin, margin + 15);
        doc.text('Henagama Rd', margin, margin + 20);
        doc.text('Gampaha', margin, margin + 25);
        doc.text('Sri Lanka', margin, margin + 30);

        doc.setFontSize(10).text(`Date: ${date}`, margin, margin + 35);
        doc.setFontSize(20).setTextColor(56, 119, 91).setFont('helvetica', 'bold').text('Supply Advance Fees', margin, 70);
        doc.setFontSize(10).setFont('helvetica', 'normal').setTextColor(0, 0, 0).text(
            textParagraph,
            margin,
            80,
            { maxWidth: maxWidth } 
        );

        doc.autoTable(headers, tableRows, {
            styles: { fontSize: 10 },
            startY: 100,
            headerStyles: { fillColor: [31, 41, 55] },
          });


        doc.setFontSize(10).setTextColor(200, 200, 200).text(`Report generated by Order Management System`, margin, doc.internal.pageSize.height - 10);   
        doc.save('Supplier-Report.pdf');
    }


    return (
        <div>
          <IconButton
            onClick={() => {
              generatePDF(dataList);
            }}
            className="bg-gray-800 text-center hover:bg-gray-600 text-white font-bold py-2 px-4 rounded cursor-pointer lg:mt-0 mt-3"
          >
            <DownloadIcon/>
          </IconButton>
        </div>
      );
};

export default OrderReport;
